# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2

#     - name: Set up Node.js
#       uses: actions/setup-node@v2
#       with:
#         node-version: '14'

#     - name: Check for frontend directory
#       run: |
#         if [ -d "frontend" ]; then
#           echo "Frontend directory found"
#         else
#           echo "Frontend directory not found"
#           exit 1
#         fi

#     - name: Install dependencies (frontend)
#       run: |
#         cd frontend
#         npm install

#     - name: Build frontend
#       run: |
#         cd frontend
#         npm run build

#     - name: Check for backend directory
#       run: |
#         if [ -d "backend" ]; then
#           echo "Backend directory found"
#         else
#           echo "Backend directory not found"
#           exit 1
#         fi

#     - name: Install dependencies (backend)
#       run: |
#         cd backend
#         npm install

#     - name: Deploy to GitHub Pages (frontend)
#       uses: peaceiris/actions-gh-pages@v3
#       with:
#         github_token: ${{ secrets.GITHUB_TOKEN }}
#         publish_dir: ./frontend/build

#     - name: Deploy to Heroku (backend)
#       env:
#         HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
#       run: |
#         cd backend
#         git init
#         git config user.name "GitHub Actions"
#         git config user.email "actions@github.com"
#         git add .
#         git commit -m "Deploy to Heroku"
#         heroku git:remote -a your-heroku-app-name
#         git push heroku main --force

name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Check for frontend directory
      run: |
        if [ -d "frontend" ]; then
          echo "Frontend directory found"
        else
          echo "Frontend directory not found"
          exit 1
        fi

    - name: Install dependencies (frontend)
      run: |
        cd frontend
        npm install

    - name: Build frontend
      run: |
        cd frontend
        npm run build

    - name: Check for backend directory
      run: |
        if [ -d "backend" ]; then
          echo "Backend directory found"
        else
          echo "Backend directory not found"
          exit 1
        fi

    - name: Install dependencies (backend)
      run: |
        cd backend
        npm install

    - name: Deploy to GitHub Pages (frontend)
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./frontend/build

    - name: Install Heroku CLI
      run: |
        curl https://cli-assets.heroku.com/install.sh | sh

    - name: Deploy to Heroku (backend)
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        cd backend
        git init
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git add .
        git commit -m "Deploy to Heroku"
        heroku git:remote -a your-heroku-app-name
        git push heroku main --force
